1. Cilj ovog zadatka je da sami implementirate tip jedinstvenog pokazivača (myUniquePtr) koji će imati osnovne mogućnosti bibliotečkog tipa unique_ptr. U „main.cpp“ datoteci nalazi se kod koji koristi unique_ptr. Vaš tip jedinstvenog pokazivača bi trebalo da može zameniti unique_ptr u tom kodu.
1a. Napraviti projekat od priloženih datoteka u direktorijumu „1_jedinstveni_pok“. Program prevesti i pokrenuti. Videti rezultate.
1b. U datoteci „myUniquePtr.h“ definisati templejt tip myUniquePtr. Pretprocesorskim direktivama #define na početku datoteke „main.cpp“ zameniti unique_ptr sa myUniquePtr. Dati kod treba da se nakon toka prevodi i ponaša isto, a zakomentarisani kod (blok „GRESKE“) treba da prouzrokuje grešku tokom prevođenja. Obratiti pažnju i na @TODO komentar na kraju funkcije main.
Napomena: Operator -> je mali izuzetak. Piše se kao metoda i ne prima parametre. Treba da vrati pokazivač na tip koji ima polje koje odgovara nazivu sa desne strane strelice.
2. U ovom zadatku treba da se upoznate sa jednim primerom upotrebe deljenog pokazivača (shared_ptr). Ujedno, treba da uočite kakav problem izaziva ciklična zavisnot deljenih pokazivača i kako se taj problem može rešiti upotrebom slabih pokazivača (weak_ptr).
2a. Napraviti projekat od priloženih datoteka u direktorijumu „2_deljeni_pok“. Program prevesti i pokrenuti. Videti rezultate.
2b. Proširiti klasu Node sa deljenim pokazivačem na pretka, npr. polje parent (ako nema pretka, parent u čvoru treba da bude nullptr). Postaviti te pokazivače na odgovarajuće vrednost u funkciji foo. Proširiti funckiju toString da ispisuje i informaciju o pretku (samo njegovo ime, ne cele podatke; zašto je ovo važno?). Analizirati rezultat.
2c. Rešiti problem iz prethodnog koraka uvođenjem slabog pokazivača na pretka, umesto deljenog pokazivača.